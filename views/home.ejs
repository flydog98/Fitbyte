<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8" />
  <style>
    p {
      color: black;
      border-width: 8px;
      border-style: solid;
      border-color: rgb(241, 248, 213);
      padding: 15px;
      background-color: rgb(245, 248, 228);
      /* 축약형 */
      border: 5px solid rgba(82, 99, 116, 0);
      height: 400px;
      border-radius: 1.5rem;
      margin-right: 15px;
    }

    .full_screen {
      background-color: aliceblue;
      height: 1000px;
    }

    .search {
      color: rgb(15, 150, 150);
    }

      .list-group {
        display: flex;
        flex-direction: column;
      }

      .list-group-item {
        display: flex;
        align-items: center;
        padding: 10px;
        border-bottom: 1px solid #ccc;
      }

      .list-group-item input {
        margin-right: 10px;
      }

      .list-group-item strong {
        font-weight: bold;
      }

      .list-group-item small {
        color: #888;
      }

      .column {
        float: left;
        width: 50%;
        height: 300px;
        padding: 10px;
      }
      .column h2 {
        margin-top: 0;
      }
      .task {
        background-color: #f2f2f2;
        border: 1px solid #ddd;
        padding: 10px;
        margin-bottom: 10px;
        cursor: grab;
      }
      .task:active {
        cursor: grabbing;
      }

      .list-group {
        display: flex;
        flex-direction: column;
      }

      .list-group-item {
        display: flex;
        align-items: center;
        padding: 10px;
        border-bottom: 1px solid #ccc;
      }

      .list-group-item input {
        margin-right: 10px;
      }

      .list-group-item strong {
        font-weight: bold;
      }

      .list-group-item small {
        color: #888;
      }
    </style>
    <%- include('./partials/head') %>
  </head>
  <body>
    <%- include('./partials/nav') %>
    <div class="full_screen">
      <div class="container mb-3">
        <div class="container px-4 py-5" id="icon-grid">
          <form method="POST" action="/time-promise">
            <a id="fitbit-auth-link" href="#" target="_blank">Fitbit 데이터 전송</a>
            <h2 class="pb-2 border-bottom">목표 운동 시간</h2>
            <label>목표 시간: </label>
            <input type="number" name="amount" min="1" max="1440" required />
            분
            <button type="submit">입력</button>
          </form>
          </div>


          <% if (todayTimePromise && todayTimePromise.amount != null) { %>
          <div>
            <%= Math.floor(todayTimePromise.amount/60) %>시간 <%=
            todayTimePromise.amount%60 %>분
          </div>
          <% } else { %>
          <p>목표 운동 시간을 설정해주세요.</p>
          <% } %>

                <div style="margin-bottom: 40px"></div>

          <h2 class="pb-2 border-bottom">운동 약속</h2>
          <div class="list-group">
            <!--ADD-->
            <label class="list-group-item d-flex gap-3 bg-body-tertiary">
              <form id="add-task-form" action="/self-promise" method="post">
                <input type="datetime-local" name="date" required />
                <input type="number" name="amount" required />
                <input type="text" name="contents" required />
                <button type="submit" class="btn btn-primary">Add</button>
              </form>
            </label>

            <table>
              <tr>
                <td>번호</td>
                <td>일시</td>
                <td>목표 시간</td>
                <td>운동 내용</td>
                <td>달성 여부</td>
              </tr>
              <% for(var i = 0; i < selfPromises.length; i++) { var data =
              selfPromises[i]; %>
              <tr>
                <td><%=i + 1%></td>
                <td><%=data.date%></td>
                <td><%=data.amount%></td>
                <td><%=data.contents%></td>
                <td><%=data.achieved%></td>
              </tr>
              <% } %>
            </table>
          </div>
        </div>
      </div>
    </div>

    <div style="margin-bottom: 60px"></div>

    <a
      href="http://13.209.155.211:3000/d/b1851fe4-77e8-42cb-976f-64ab5e30df6b/raspberrypi-test?orgId=1"
      target="_blank"
      style="color: blue; font-size: 25px"
      >환경 데이터</a
    >

    <div style="margin-bottom: 60px"></div>

    <h2 class="pb-2 border-bottom">주변 운동시설 및 등산로</h2>
  </body>


  <script>

  // 환경 변수 clientId 가져와서, fitbit권한 인증 링크 생성
  function fetchConfig() {
    fetch('http://localhost:8888/api/config', {
      method: 'GET',
      cache: 'no-cache' // 캐시 무시 옵션 추가
    })
      .then(response => response.json())
      .then(data => {
        const clientId = data.clientId;
        // fitbit 권한 인증 이후에 callback으로 리다이렉트
        const fitbitAuthURL = `https://www.fitbit.com/oauth2/authorize?response_type=code&client_id=${clientId}&scope=activity%20profile%20location&redirect_uri=http://localhost:8888/fitbit/callback`;
        document.querySelector("#fitbit-auth-link").setAttribute("href", fitbitAuthURL);
      })
      .catch(error => {
        console.error('Error:', error);
      });
  }

window.addEventListener('load', fetchConfig); // 페이지 로드될때마다 fetchconfig 호출
  </script>

</html>

<!-- //         // 서버로부터 액세스 토큰 응답 받아 처리
//         const accessToken = data.accessToken;
//         localStorage.setItem('accessToken', accessToken);
//         // 클라이언트에서 액세스 토큰을 저장하거나 사용가능
//         fetchFitbitActivity()
//         .then(activityData => {
//         // 목표 달성 메시지
//         //const timePromiseAmount = data.timePromiseAmount; // time-promise에서 가져온 값
//         const activityAmount = data.activityAmount; // 운동 시간 데이터

//         if (activityAmount >= todayTimePromise) {
//           document.querySelector("#message").innerText = "운동 시간 목표를 달성했습니다!";
//         } else {
//           document.querySelector("#message").innerText = "운동 시간 목표를 달성하지 못했습니다.";
//         }
//       })
//       .catch(error => {
//         console.error('Error:', error);
//       });
//     })
//     .catch(error => {
//       console.error('Error', error);
//     });
//   }
// }

        // return fetch('http://localhost:8888/fitbit/callback', {
        //   method: 'GET',
        //   cache: 'no-cache'
        // })
        // .then(response => response.json())
        // .then(data => {
        //   const accessToken = data.accessToken;
        // })
    //const accessToken = getCookie('accessToken');

//     if (accessToken) {
//       console.log('액세스 토큰 잘 가져와졌음');

//     const baseUrl = 'https://api.fitbit.com/1/user/-/activities/list.json';
//     const beforeDate = 'today';
//     const sort = 'desc';
//     const limit = 100;

//     const queryParams = new URLSearchParams({
//       beforeDate,
//       sort,
//       limit
//     });

//     // 인증 토큰 붙이기
//     const requestUrl = `${baseUrl}?${queryParams.toString()}`;

//     const headers = {
//       'Authorization': `Bearer ${accessToken}`
//     };

//     return fetch(requestUrl, { headers })
//       .then(response => response.json())
//       .then(data => {
//         return data.activities.map(activity => {
//           return activity.activeZoneMinutes.minutesInHeartRateZones.minutes;
//         })
//       })
//       .catch(error => {
//         console.error('Error:', error);
//       });
//   } else {
//     console.log('액세스 토큰 없음');
//     return Promise.reject(new Error('액세스 토큰 없음'));
//   }
// }
    //const accessToken = getCookie('accessToken');


// 쿠키에서 특정 이름의 쿠키값을 가져오는 함수
// function getCookie(name) {
//   const cookies = document.cookie.split(';');
//   for (let i = 0; i < cookies.length; i++) {
//     const cookie = cookies[i].trim();
//     if (cookie.startsWith(name + '=')) {
//       return cookie.substring(name.length + 1);
//     }
//   }
//   return null;
// }

// 페이지 로드 시 fetchConfig 함수 호출
// window.addEventListener('load', fetchConfig);
    // 페이지 로드 시 인증 코드 추출 함수,  환경 변수 값 가져오는 함수 호출 -->